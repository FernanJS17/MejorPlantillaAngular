{"ast":null,"code":"var _a, _b;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ROUTES } from '../../components/sidebar/sidebar.component';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nlet AuthLayoutComponent = class AuthLayoutComponent {\n  constructor(router, modalService) {\n    this.router = router;\n    this.modalService = modalService;\n    this.test = new Date();\n    this.sidebarColor = \"red\";\n    this.isCollapsed = true;\n    this.mobile_menu_visible = 0;\n    // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n    this.updateColor = () => {\n      var navbar = document.getElementsByClassName('navbar')[0];\n      if (window.innerWidth < 993 && !this.isCollapsed) {\n        navbar.classList.add('bg-white');\n        navbar.classList.remove('navbar-transparent');\n      } else {\n        navbar.classList.remove('bg-white');\n        navbar.classList.add('navbar-transparent');\n      }\n    };\n  }\n  changeSidebarColor(color) {\n    var sidebar = document.getElementsByClassName('sidebar')[0];\n    var mainPanel = document.getElementsByClassName('main-panel')[0];\n    this.sidebarColor = color;\n    if (sidebar != undefined) {\n      sidebar.setAttribute('data', color);\n    }\n    if (mainPanel != undefined) {\n      mainPanel.setAttribute('data', color);\n    }\n  }\n  changeDashboardColor(color) {\n    var body = document.getElementsByTagName('body')[0];\n    if (body && color === 'white-content') {\n      body.classList.add(color);\n    } else if (body.classList.contains('white-content')) {\n      body.classList.remove('white-content');\n    }\n  }\n  ngOnInit() {\n    var navbar = document.getElementsByClassName('navbar')[0];\n    window.addEventListener(\"resize\", this.updateColor);\n    this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\n    this.router.events.subscribe(event => {\n      this.sidebarClose();\n      var $layer = document.getElementsByClassName(\"close-layer\")[0];\n      if ($layer) {\n        $layer.remove();\n        this.mobile_menu_visible = 0;\n      }\n    });\n    this.menuItems = ROUTES.filter(menuItem => menuItem);\n    // on this page, we need on the body tag the classes .rtl and .menu-on-right\n    document.body.classList.add(\"rtl\", \"menu-on-right\");\n    // we also need the rtl bootstrap\n    // so we add it dynamically to the head\n    let head = document.head;\n    let link = document.createElement(\"link\");\n    link.type = \"text/css\";\n    link.rel = \"stylesheet\";\n    link.id = \"rtl-id\";\n    link.href = \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-rtl/3.4.0/css/bootstrap-rtl.css\";\n    head.appendChild(link);\n  }\n  ngOnDestroy() {\n    // when we exit this page, we need to delete the classes .rtl and .menu-on-right\n    // from the body tag\n    document.body.classList.remove(\"rtl\", \"menu-on-right\");\n    // we also need to delete the rtl bootstrap, so it does not break the other pages\n    // that do not make use of rtl\n    document.getElementById(\"rtl-id\").remove();\n  }\n  collapse() {\n    this.isCollapsed = !this.isCollapsed;\n    const navbar = document.getElementsByTagName(\"nav\")[0];\n    if (!this.isCollapsed) {\n      navbar.classList.remove(\"navbar-transparent\");\n      navbar.classList.add(\"bg-white\");\n    } else {\n      navbar.classList.add(\"navbar-transparent\");\n      navbar.classList.remove(\"bg-white\");\n    }\n  }\n  sidebarOpen() {\n    const toggleButton = this.toggleButton;\n    const mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    const html = document.getElementsByTagName(\"html\")[0];\n    if (window.innerWidth < 991) {\n      mainPanel.style.position = \"fixed\";\n    }\n    setTimeout(function () {\n      toggleButton.classList.add(\"toggled\");\n    }, 500);\n    html.classList.add(\"nav-open\");\n    this.sidebarVisible = true;\n  }\n  sidebarClose() {\n    const html = document.getElementsByTagName(\"html\")[0];\n    this.toggleButton.classList.remove(\"toggled\");\n    const mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n    if (window.innerWidth < 991) {\n      setTimeout(function () {\n        mainPanel.style.position = \"\";\n      }, 500);\n    }\n    this.sidebarVisible = false;\n    html.classList.remove(\"nav-open\");\n  }\n  sidebarToggle() {\n    // const toggleButton = this.toggleButton;\n    // const html = document.getElementsByTagName('html')[0];\n    var $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\n    if (this.sidebarVisible === false) {\n      this.sidebarOpen();\n    } else {\n      this.sidebarClose();\n    }\n    const html = document.getElementsByTagName(\"html\")[0];\n    if (this.mobile_menu_visible == 1) {\n      // $('html').removeClass('nav-open');\n      html.classList.remove(\"nav-open\");\n      if ($layer) {\n        $layer.remove();\n      }\n      setTimeout(function () {\n        $toggle.classList.remove(\"toggled\");\n      }, 400);\n      this.mobile_menu_visible = 0;\n    } else {\n      setTimeout(function () {\n        $toggle.classList.add(\"toggled\");\n      }, 430);\n      var $layer = document.createElement(\"div\");\n      $layer.setAttribute(\"class\", \"close-layer\");\n      if (html.querySelectorAll(\".main-panel\")) {\n        document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\n      } else if (html.classList.contains(\"off-canvas-sidebar\")) {\n        document.getElementsByClassName(\"wrapper-full-page\")[0].appendChild($layer);\n      }\n      setTimeout(function () {\n        $layer.classList.add(\"visible\");\n      }, 100);\n      $layer.onclick = function () {\n        //asign a function\n        html.classList.remove(\"nav-open\");\n        this.mobile_menu_visible = 0;\n        $layer.classList.remove(\"visible\");\n        setTimeout(function () {\n          $layer.remove();\n          $toggle.classList.remove(\"toggled\");\n        }, 400);\n      }.bind(this);\n      html.classList.add(\"nav-open\");\n      this.mobile_menu_visible = 1;\n    }\n  }\n  open(content) {\n    this.modalService.open(content, {\n      windowClass: 'modal-search'\n    }).result.then(result => {\n      this.closeResult = `Closed with: ${result}`;\n    }, reason => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  getDismissReason(reason) {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n};\nAuthLayoutComponent = __decorate([Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.scss']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof Router !== \"undefined\" && Router) === \"function\" ? _a : Object, typeof (_b = typeof NgbModal !== \"undefined\" && NgbModal) === \"function\" ? _b : Object])], AuthLayoutComponent);\nexport { AuthLayoutComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}